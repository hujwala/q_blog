// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SignUp calls on submit 1`] = `
<form
  className="signup"
  id="signup"
  onSubmit={[Function]}
>
  <div
    className="title"
  >
    Sign Up 
  </div>
  <div
    className="form-group"
    id="username"
  >
    <Field
      component={[Function]}
      label=" name"
      name="name"
    >
      <Connect(ConnectedField)
        _reduxForm={
          Object {
            "anyTouched": false,
            "array": Object {
              "insert": [Function],
              "move": [Function],
              "pop": [Function],
              "push": [Function],
              "remove": [Function],
              "removeAll": [Function],
              "shift": [Function],
              "splice": [Function],
              "swap": [Function],
              "unshift": [Function],
            },
            "arrayInsert": [Function],
            "arrayMove": [Function],
            "arrayPop": [Function],
            "arrayPush": [Function],
            "arrayRemove": [Function],
            "arrayRemoveAll": [Function],
            "arrayShift": [Function],
            "arraySplice": [Function],
            "arraySwap": [Function],
            "arrayUnshift": [Function],
            "asyncErrors": undefined,
            "asyncValidate": [Function],
            "asyncValidating": false,
            "autofill": [Function],
            "blur": [Function],
            "change": [Function],
            "clearAsyncError": [Function],
            "clearFields": [Function],
            "clearSubmit": [Function],
            "clearSubmitErrors": [Function],
            "destroy": [Function],
            "destroyOnUnmount": true,
            "dirty": false,
            "dispatch": [Function],
            "enableReinitialize": false,
            "error": undefined,
            "fields": Array [
              "name",
              "email",
              "password",
              "confirmPassword",
            ],
            "focus": [Function],
            "forceUnregisterOnUnmount": false,
            "form": "contact",
            "getFormState": [Function],
            "getValues": [Function],
            "initialValues": undefined,
            "initialize": [Function],
            "initialized": false,
            "invalid": false,
            "keepDirtyOnReinitialize": false,
            "persistentSubmitErrors": false,
            "pristine": true,
            "pure": true,
            "register": [Function],
            "registerField": [Function],
            "registerInnerOnSubmit": [Function],
            "registeredFields": undefined,
            "reset": [Function],
            "resetSection": [Function],
            "sectionPrefix": undefined,
            "setSubmitFailed": [Function],
            "setSubmitSucceeded": [Function],
            "shouldAsyncValidate": [Function],
            "shouldError": [Function],
            "shouldValidate": [Function],
            "shouldWarn": [Function],
            "startAsyncValidation": [Function],
            "startSubmit": [Function],
            "stopAsyncValidation": [Function],
            "stopSubmit": [Function],
            "submit": [Function],
            "submitFailed": false,
            "submitSucceeded": false,
            "submitting": false,
            "syncErrors": Object {},
            "syncWarnings": Object {},
            "touch": [Function],
            "touchOnBlur": true,
            "touchOnChange": false,
            "triggerSubmit": undefined,
            "unregister": [Function],
            "unregisterField": [Function],
            "untouch": [Function],
            "updateSyncErrors": [Function],
            "updateSyncWarnings": [Function],
            "updateUnregisteredFields": false,
            "valid": true,
            "validExceptSubmit": true,
            "validate": [Function],
            "values": Object {},
            "warning": undefined,
          }
        }
        component={[Function]}
        label=" name"
        name="name"
        normalize={[Function]}
      >
        <ConnectedField
          _reduxForm={
            Object {
              "anyTouched": false,
              "array": Object {
                "insert": [Function],
                "move": [Function],
                "pop": [Function],
                "push": [Function],
                "remove": [Function],
                "removeAll": [Function],
                "shift": [Function],
                "splice": [Function],
                "swap": [Function],
                "unshift": [Function],
              },
              "arrayInsert": [Function],
              "arrayMove": [Function],
              "arrayPop": [Function],
              "arrayPush": [Function],
              "arrayRemove": [Function],
              "arrayRemoveAll": [Function],
              "arrayShift": [Function],
              "arraySplice": [Function],
              "arraySwap": [Function],
              "arrayUnshift": [Function],
              "asyncErrors": undefined,
              "asyncValidate": [Function],
              "asyncValidating": false,
              "autofill": [Function],
              "blur": [Function],
              "change": [Function],
              "clearAsyncError": [Function],
              "clearFields": [Function],
              "clearSubmit": [Function],
              "clearSubmitErrors": [Function],
              "destroy": [Function],
              "destroyOnUnmount": true,
              "dirty": false,
              "dispatch": [Function],
              "enableReinitialize": false,
              "error": undefined,
              "fields": Array [
                "name",
                "email",
                "password",
                "confirmPassword",
              ],
              "focus": [Function],
              "forceUnregisterOnUnmount": false,
              "form": "contact",
              "getFormState": [Function],
              "getValues": [Function],
              "initialValues": undefined,
              "initialize": [Function],
              "initialized": false,
              "invalid": false,
              "keepDirtyOnReinitialize": false,
              "persistentSubmitErrors": false,
              "pristine": true,
              "pure": true,
              "register": [Function],
              "registerField": [Function],
              "registerInnerOnSubmit": [Function],
              "registeredFields": undefined,
              "reset": [Function],
              "resetSection": [Function],
              "sectionPrefix": undefined,
              "setSubmitFailed": [Function],
              "setSubmitSucceeded": [Function],
              "shouldAsyncValidate": [Function],
              "shouldError": [Function],
              "shouldValidate": [Function],
              "shouldWarn": [Function],
              "startAsyncValidation": [Function],
              "startSubmit": [Function],
              "stopAsyncValidation": [Function],
              "stopSubmit": [Function],
              "submit": [Function],
              "submitFailed": false,
              "submitSucceeded": false,
              "submitting": false,
              "syncErrors": Object {},
              "syncWarnings": Object {},
              "touch": [Function],
              "touchOnBlur": true,
              "touchOnChange": false,
              "triggerSubmit": undefined,
              "unregister": [Function],
              "unregisterField": [Function],
              "untouch": [Function],
              "updateSyncErrors": [Function],
              "updateSyncWarnings": [Function],
              "updateUnregisteredFields": false,
              "valid": true,
              "validExceptSubmit": true,
              "validate": [Function],
              "values": Object {},
              "warning": undefined,
            }
          }
          asyncValidating={false}
          component={[Function]}
          dirty={false}
          dispatch={[Function]}
          label=" name"
          name="name"
          normalize={[Function]}
          pristine={true}
          syncError="Required"
        >
          <renderField
            input={
              Object {
                "name": "name",
                "onBlur": [Function],
                "onChange": [Function],
                "onDragStart": [Function],
                "onDrop": [Function],
                "onFocus": [Function],
                "value": "",
              }
            }
            label=" name"
            meta={
              Object {
                "active": false,
                "asyncValidating": false,
                "autofilled": false,
                "dirty": false,
                "dispatch": [Function],
                "error": "Required",
                "form": "contact",
                "initial": undefined,
                "invalid": true,
                "pristine": true,
                "submitFailed": false,
                "submitting": false,
                "touched": false,
                "valid": false,
                "visited": false,
                "warning": undefined,
              }
            }
          >
            <div>
              <label
                className="control-label"
              >
                 name
              </label>
              <div>
                <input
                  className="form-control"
                  name="name"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onDragStart={[Function]}
                  onDrop={[Function]}
                  onFocus={[Function]}
                  placeholder=" name"
                  value=""
                />
              </div>
            </div>
          </renderField>
        </ConnectedField>
      </Connect(ConnectedField)>
    </Field>
  </div>
  <div
    className="form-group"
    id="email"
  >
    <Field
      component={[Function]}
      label="Email"
      name="email"
    >
      <Connect(ConnectedField)
        _reduxForm={
          Object {
            "anyTouched": false,
            "array": Object {
              "insert": [Function],
              "move": [Function],
              "pop": [Function],
              "push": [Function],
              "remove": [Function],
              "removeAll": [Function],
              "shift": [Function],
              "splice": [Function],
              "swap": [Function],
              "unshift": [Function],
            },
            "arrayInsert": [Function],
            "arrayMove": [Function],
            "arrayPop": [Function],
            "arrayPush": [Function],
            "arrayRemove": [Function],
            "arrayRemoveAll": [Function],
            "arrayShift": [Function],
            "arraySplice": [Function],
            "arraySwap": [Function],
            "arrayUnshift": [Function],
            "asyncErrors": undefined,
            "asyncValidate": [Function],
            "asyncValidating": false,
            "autofill": [Function],
            "blur": [Function],
            "change": [Function],
            "clearAsyncError": [Function],
            "clearFields": [Function],
            "clearSubmit": [Function],
            "clearSubmitErrors": [Function],
            "destroy": [Function],
            "destroyOnUnmount": true,
            "dirty": false,
            "dispatch": [Function],
            "enableReinitialize": false,
            "error": undefined,
            "fields": Array [
              "name",
              "email",
              "password",
              "confirmPassword",
            ],
            "focus": [Function],
            "forceUnregisterOnUnmount": false,
            "form": "contact",
            "getFormState": [Function],
            "getValues": [Function],
            "initialValues": undefined,
            "initialize": [Function],
            "initialized": false,
            "invalid": false,
            "keepDirtyOnReinitialize": false,
            "persistentSubmitErrors": false,
            "pristine": true,
            "pure": true,
            "register": [Function],
            "registerField": [Function],
            "registerInnerOnSubmit": [Function],
            "registeredFields": undefined,
            "reset": [Function],
            "resetSection": [Function],
            "sectionPrefix": undefined,
            "setSubmitFailed": [Function],
            "setSubmitSucceeded": [Function],
            "shouldAsyncValidate": [Function],
            "shouldError": [Function],
            "shouldValidate": [Function],
            "shouldWarn": [Function],
            "startAsyncValidation": [Function],
            "startSubmit": [Function],
            "stopAsyncValidation": [Function],
            "stopSubmit": [Function],
            "submit": [Function],
            "submitFailed": false,
            "submitSucceeded": false,
            "submitting": false,
            "syncErrors": Object {},
            "syncWarnings": Object {},
            "touch": [Function],
            "touchOnBlur": true,
            "touchOnChange": false,
            "triggerSubmit": undefined,
            "unregister": [Function],
            "unregisterField": [Function],
            "untouch": [Function],
            "updateSyncErrors": [Function],
            "updateSyncWarnings": [Function],
            "updateUnregisteredFields": false,
            "valid": true,
            "validExceptSubmit": true,
            "validate": [Function],
            "values": Object {},
            "warning": undefined,
          }
        }
        component={[Function]}
        label="Email"
        name="email"
        normalize={[Function]}
      >
        <ConnectedField
          _reduxForm={
            Object {
              "anyTouched": false,
              "array": Object {
                "insert": [Function],
                "move": [Function],
                "pop": [Function],
                "push": [Function],
                "remove": [Function],
                "removeAll": [Function],
                "shift": [Function],
                "splice": [Function],
                "swap": [Function],
                "unshift": [Function],
              },
              "arrayInsert": [Function],
              "arrayMove": [Function],
              "arrayPop": [Function],
              "arrayPush": [Function],
              "arrayRemove": [Function],
              "arrayRemoveAll": [Function],
              "arrayShift": [Function],
              "arraySplice": [Function],
              "arraySwap": [Function],
              "arrayUnshift": [Function],
              "asyncErrors": undefined,
              "asyncValidate": [Function],
              "asyncValidating": false,
              "autofill": [Function],
              "blur": [Function],
              "change": [Function],
              "clearAsyncError": [Function],
              "clearFields": [Function],
              "clearSubmit": [Function],
              "clearSubmitErrors": [Function],
              "destroy": [Function],
              "destroyOnUnmount": true,
              "dirty": false,
              "dispatch": [Function],
              "enableReinitialize": false,
              "error": undefined,
              "fields": Array [
                "name",
                "email",
                "password",
                "confirmPassword",
              ],
              "focus": [Function],
              "forceUnregisterOnUnmount": false,
              "form": "contact",
              "getFormState": [Function],
              "getValues": [Function],
              "initialValues": undefined,
              "initialize": [Function],
              "initialized": false,
              "invalid": false,
              "keepDirtyOnReinitialize": false,
              "persistentSubmitErrors": false,
              "pristine": true,
              "pure": true,
              "register": [Function],
              "registerField": [Function],
              "registerInnerOnSubmit": [Function],
              "registeredFields": undefined,
              "reset": [Function],
              "resetSection": [Function],
              "sectionPrefix": undefined,
              "setSubmitFailed": [Function],
              "setSubmitSucceeded": [Function],
              "shouldAsyncValidate": [Function],
              "shouldError": [Function],
              "shouldValidate": [Function],
              "shouldWarn": [Function],
              "startAsyncValidation": [Function],
              "startSubmit": [Function],
              "stopAsyncValidation": [Function],
              "stopSubmit": [Function],
              "submit": [Function],
              "submitFailed": false,
              "submitSucceeded": false,
              "submitting": false,
              "syncErrors": Object {},
              "syncWarnings": Object {},
              "touch": [Function],
              "touchOnBlur": true,
              "touchOnChange": false,
              "triggerSubmit": undefined,
              "unregister": [Function],
              "unregisterField": [Function],
              "untouch": [Function],
              "updateSyncErrors": [Function],
              "updateSyncWarnings": [Function],
              "updateUnregisteredFields": false,
              "valid": true,
              "validExceptSubmit": true,
              "validate": [Function],
              "values": Object {},
              "warning": undefined,
            }
          }
          asyncValidating={false}
          component={[Function]}
          dirty={false}
          dispatch={[Function]}
          label="Email"
          name="email"
          normalize={[Function]}
          pristine={true}
          syncError="Required"
        >
          <renderField
            input={
              Object {
                "name": "email",
                "onBlur": [Function],
                "onChange": [Function],
                "onDragStart": [Function],
                "onDrop": [Function],
                "onFocus": [Function],
                "value": "",
              }
            }
            label="Email"
            meta={
              Object {
                "active": false,
                "asyncValidating": false,
                "autofilled": false,
                "dirty": false,
                "dispatch": [Function],
                "error": "Required",
                "form": "contact",
                "initial": undefined,
                "invalid": true,
                "pristine": true,
                "submitFailed": false,
                "submitting": false,
                "touched": false,
                "valid": false,
                "visited": false,
                "warning": undefined,
              }
            }
          >
            <div>
              <label
                className="control-label"
              >
                Email
              </label>
              <div>
                <input
                  className="form-control"
                  name="email"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onDragStart={[Function]}
                  onDrop={[Function]}
                  onFocus={[Function]}
                  placeholder="Email"
                  value=""
                />
              </div>
            </div>
          </renderField>
        </ConnectedField>
      </Connect(ConnectedField)>
    </Field>
  </div>
  <div
    className="form-group"
    id="password"
  >
    <Field
      component={[Function]}
      label="Password"
      name="password"
      type="password"
    >
      <Connect(ConnectedField)
        _reduxForm={
          Object {
            "anyTouched": false,
            "array": Object {
              "insert": [Function],
              "move": [Function],
              "pop": [Function],
              "push": [Function],
              "remove": [Function],
              "removeAll": [Function],
              "shift": [Function],
              "splice": [Function],
              "swap": [Function],
              "unshift": [Function],
            },
            "arrayInsert": [Function],
            "arrayMove": [Function],
            "arrayPop": [Function],
            "arrayPush": [Function],
            "arrayRemove": [Function],
            "arrayRemoveAll": [Function],
            "arrayShift": [Function],
            "arraySplice": [Function],
            "arraySwap": [Function],
            "arrayUnshift": [Function],
            "asyncErrors": undefined,
            "asyncValidate": [Function],
            "asyncValidating": false,
            "autofill": [Function],
            "blur": [Function],
            "change": [Function],
            "clearAsyncError": [Function],
            "clearFields": [Function],
            "clearSubmit": [Function],
            "clearSubmitErrors": [Function],
            "destroy": [Function],
            "destroyOnUnmount": true,
            "dirty": false,
            "dispatch": [Function],
            "enableReinitialize": false,
            "error": undefined,
            "fields": Array [
              "name",
              "email",
              "password",
              "confirmPassword",
            ],
            "focus": [Function],
            "forceUnregisterOnUnmount": false,
            "form": "contact",
            "getFormState": [Function],
            "getValues": [Function],
            "initialValues": undefined,
            "initialize": [Function],
            "initialized": false,
            "invalid": false,
            "keepDirtyOnReinitialize": false,
            "persistentSubmitErrors": false,
            "pristine": true,
            "pure": true,
            "register": [Function],
            "registerField": [Function],
            "registerInnerOnSubmit": [Function],
            "registeredFields": undefined,
            "reset": [Function],
            "resetSection": [Function],
            "sectionPrefix": undefined,
            "setSubmitFailed": [Function],
            "setSubmitSucceeded": [Function],
            "shouldAsyncValidate": [Function],
            "shouldError": [Function],
            "shouldValidate": [Function],
            "shouldWarn": [Function],
            "startAsyncValidation": [Function],
            "startSubmit": [Function],
            "stopAsyncValidation": [Function],
            "stopSubmit": [Function],
            "submit": [Function],
            "submitFailed": false,
            "submitSucceeded": false,
            "submitting": false,
            "syncErrors": Object {},
            "syncWarnings": Object {},
            "touch": [Function],
            "touchOnBlur": true,
            "touchOnChange": false,
            "triggerSubmit": undefined,
            "unregister": [Function],
            "unregisterField": [Function],
            "untouch": [Function],
            "updateSyncErrors": [Function],
            "updateSyncWarnings": [Function],
            "updateUnregisteredFields": false,
            "valid": true,
            "validExceptSubmit": true,
            "validate": [Function],
            "values": Object {},
            "warning": undefined,
          }
        }
        component={[Function]}
        label="Password"
        name="password"
        normalize={[Function]}
        type="password"
      >
        <ConnectedField
          _reduxForm={
            Object {
              "anyTouched": false,
              "array": Object {
                "insert": [Function],
                "move": [Function],
                "pop": [Function],
                "push": [Function],
                "remove": [Function],
                "removeAll": [Function],
                "shift": [Function],
                "splice": [Function],
                "swap": [Function],
                "unshift": [Function],
              },
              "arrayInsert": [Function],
              "arrayMove": [Function],
              "arrayPop": [Function],
              "arrayPush": [Function],
              "arrayRemove": [Function],
              "arrayRemoveAll": [Function],
              "arrayShift": [Function],
              "arraySplice": [Function],
              "arraySwap": [Function],
              "arrayUnshift": [Function],
              "asyncErrors": undefined,
              "asyncValidate": [Function],
              "asyncValidating": false,
              "autofill": [Function],
              "blur": [Function],
              "change": [Function],
              "clearAsyncError": [Function],
              "clearFields": [Function],
              "clearSubmit": [Function],
              "clearSubmitErrors": [Function],
              "destroy": [Function],
              "destroyOnUnmount": true,
              "dirty": false,
              "dispatch": [Function],
              "enableReinitialize": false,
              "error": undefined,
              "fields": Array [
                "name",
                "email",
                "password",
                "confirmPassword",
              ],
              "focus": [Function],
              "forceUnregisterOnUnmount": false,
              "form": "contact",
              "getFormState": [Function],
              "getValues": [Function],
              "initialValues": undefined,
              "initialize": [Function],
              "initialized": false,
              "invalid": false,
              "keepDirtyOnReinitialize": false,
              "persistentSubmitErrors": false,
              "pristine": true,
              "pure": true,
              "register": [Function],
              "registerField": [Function],
              "registerInnerOnSubmit": [Function],
              "registeredFields": undefined,
              "reset": [Function],
              "resetSection": [Function],
              "sectionPrefix": undefined,
              "setSubmitFailed": [Function],
              "setSubmitSucceeded": [Function],
              "shouldAsyncValidate": [Function],
              "shouldError": [Function],
              "shouldValidate": [Function],
              "shouldWarn": [Function],
              "startAsyncValidation": [Function],
              "startSubmit": [Function],
              "stopAsyncValidation": [Function],
              "stopSubmit": [Function],
              "submit": [Function],
              "submitFailed": false,
              "submitSucceeded": false,
              "submitting": false,
              "syncErrors": Object {},
              "syncWarnings": Object {},
              "touch": [Function],
              "touchOnBlur": true,
              "touchOnChange": false,
              "triggerSubmit": undefined,
              "unregister": [Function],
              "unregisterField": [Function],
              "untouch": [Function],
              "updateSyncErrors": [Function],
              "updateSyncWarnings": [Function],
              "updateUnregisteredFields": false,
              "valid": true,
              "validExceptSubmit": true,
              "validate": [Function],
              "values": Object {},
              "warning": undefined,
            }
          }
          asyncValidating={false}
          component={[Function]}
          dirty={false}
          dispatch={[Function]}
          label="Password"
          name="password"
          normalize={[Function]}
          pristine={true}
          syncError="Required"
          type="password"
        >
          <renderField
            input={
              Object {
                "name": "password",
                "onBlur": [Function],
                "onChange": [Function],
                "onDragStart": [Function],
                "onDrop": [Function],
                "onFocus": [Function],
                "value": "",
              }
            }
            label="Password"
            meta={
              Object {
                "active": false,
                "asyncValidating": false,
                "autofilled": false,
                "dirty": false,
                "dispatch": [Function],
                "error": "Required",
                "form": "contact",
                "initial": undefined,
                "invalid": true,
                "pristine": true,
                "submitFailed": false,
                "submitting": false,
                "touched": false,
                "valid": false,
                "visited": false,
                "warning": undefined,
              }
            }
            type="password"
          >
            <div>
              <label
                className="control-label"
              >
                Password
              </label>
              <div>
                <input
                  className="form-control"
                  name="password"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onDragStart={[Function]}
                  onDrop={[Function]}
                  onFocus={[Function]}
                  placeholder="Password"
                  type="password"
                  value=""
                />
              </div>
            </div>
          </renderField>
        </ConnectedField>
      </Connect(ConnectedField)>
    </Field>
  </div>
  <div
    className="form-group"
    id="confirmPassword"
  >
    <Field
      component={[Function]}
      label="ConfirmPassword"
      name="confirmPassword"
      type="password"
    >
      <Connect(ConnectedField)
        _reduxForm={
          Object {
            "anyTouched": false,
            "array": Object {
              "insert": [Function],
              "move": [Function],
              "pop": [Function],
              "push": [Function],
              "remove": [Function],
              "removeAll": [Function],
              "shift": [Function],
              "splice": [Function],
              "swap": [Function],
              "unshift": [Function],
            },
            "arrayInsert": [Function],
            "arrayMove": [Function],
            "arrayPop": [Function],
            "arrayPush": [Function],
            "arrayRemove": [Function],
            "arrayRemoveAll": [Function],
            "arrayShift": [Function],
            "arraySplice": [Function],
            "arraySwap": [Function],
            "arrayUnshift": [Function],
            "asyncErrors": undefined,
            "asyncValidate": [Function],
            "asyncValidating": false,
            "autofill": [Function],
            "blur": [Function],
            "change": [Function],
            "clearAsyncError": [Function],
            "clearFields": [Function],
            "clearSubmit": [Function],
            "clearSubmitErrors": [Function],
            "destroy": [Function],
            "destroyOnUnmount": true,
            "dirty": false,
            "dispatch": [Function],
            "enableReinitialize": false,
            "error": undefined,
            "fields": Array [
              "name",
              "email",
              "password",
              "confirmPassword",
            ],
            "focus": [Function],
            "forceUnregisterOnUnmount": false,
            "form": "contact",
            "getFormState": [Function],
            "getValues": [Function],
            "initialValues": undefined,
            "initialize": [Function],
            "initialized": false,
            "invalid": false,
            "keepDirtyOnReinitialize": false,
            "persistentSubmitErrors": false,
            "pristine": true,
            "pure": true,
            "register": [Function],
            "registerField": [Function],
            "registerInnerOnSubmit": [Function],
            "registeredFields": undefined,
            "reset": [Function],
            "resetSection": [Function],
            "sectionPrefix": undefined,
            "setSubmitFailed": [Function],
            "setSubmitSucceeded": [Function],
            "shouldAsyncValidate": [Function],
            "shouldError": [Function],
            "shouldValidate": [Function],
            "shouldWarn": [Function],
            "startAsyncValidation": [Function],
            "startSubmit": [Function],
            "stopAsyncValidation": [Function],
            "stopSubmit": [Function],
            "submit": [Function],
            "submitFailed": false,
            "submitSucceeded": false,
            "submitting": false,
            "syncErrors": Object {},
            "syncWarnings": Object {},
            "touch": [Function],
            "touchOnBlur": true,
            "touchOnChange": false,
            "triggerSubmit": undefined,
            "unregister": [Function],
            "unregisterField": [Function],
            "untouch": [Function],
            "updateSyncErrors": [Function],
            "updateSyncWarnings": [Function],
            "updateUnregisteredFields": false,
            "valid": true,
            "validExceptSubmit": true,
            "validate": [Function],
            "values": Object {},
            "warning": undefined,
          }
        }
        component={[Function]}
        label="ConfirmPassword"
        name="confirmPassword"
        normalize={[Function]}
        type="password"
      >
        <ConnectedField
          _reduxForm={
            Object {
              "anyTouched": false,
              "array": Object {
                "insert": [Function],
                "move": [Function],
                "pop": [Function],
                "push": [Function],
                "remove": [Function],
                "removeAll": [Function],
                "shift": [Function],
                "splice": [Function],
                "swap": [Function],
                "unshift": [Function],
              },
              "arrayInsert": [Function],
              "arrayMove": [Function],
              "arrayPop": [Function],
              "arrayPush": [Function],
              "arrayRemove": [Function],
              "arrayRemoveAll": [Function],
              "arrayShift": [Function],
              "arraySplice": [Function],
              "arraySwap": [Function],
              "arrayUnshift": [Function],
              "asyncErrors": undefined,
              "asyncValidate": [Function],
              "asyncValidating": false,
              "autofill": [Function],
              "blur": [Function],
              "change": [Function],
              "clearAsyncError": [Function],
              "clearFields": [Function],
              "clearSubmit": [Function],
              "clearSubmitErrors": [Function],
              "destroy": [Function],
              "destroyOnUnmount": true,
              "dirty": false,
              "dispatch": [Function],
              "enableReinitialize": false,
              "error": undefined,
              "fields": Array [
                "name",
                "email",
                "password",
                "confirmPassword",
              ],
              "focus": [Function],
              "forceUnregisterOnUnmount": false,
              "form": "contact",
              "getFormState": [Function],
              "getValues": [Function],
              "initialValues": undefined,
              "initialize": [Function],
              "initialized": false,
              "invalid": false,
              "keepDirtyOnReinitialize": false,
              "persistentSubmitErrors": false,
              "pristine": true,
              "pure": true,
              "register": [Function],
              "registerField": [Function],
              "registerInnerOnSubmit": [Function],
              "registeredFields": undefined,
              "reset": [Function],
              "resetSection": [Function],
              "sectionPrefix": undefined,
              "setSubmitFailed": [Function],
              "setSubmitSucceeded": [Function],
              "shouldAsyncValidate": [Function],
              "shouldError": [Function],
              "shouldValidate": [Function],
              "shouldWarn": [Function],
              "startAsyncValidation": [Function],
              "startSubmit": [Function],
              "stopAsyncValidation": [Function],
              "stopSubmit": [Function],
              "submit": [Function],
              "submitFailed": false,
              "submitSucceeded": false,
              "submitting": false,
              "syncErrors": Object {},
              "syncWarnings": Object {},
              "touch": [Function],
              "touchOnBlur": true,
              "touchOnChange": false,
              "triggerSubmit": undefined,
              "unregister": [Function],
              "unregisterField": [Function],
              "untouch": [Function],
              "updateSyncErrors": [Function],
              "updateSyncWarnings": [Function],
              "updateUnregisteredFields": false,
              "valid": true,
              "validExceptSubmit": true,
              "validate": [Function],
              "values": Object {},
              "warning": undefined,
            }
          }
          asyncValidating={false}
          component={[Function]}
          dirty={false}
          dispatch={[Function]}
          label="ConfirmPassword"
          name="confirmPassword"
          normalize={[Function]}
          pristine={true}
          syncError="Required"
          type="password"
        >
          <renderField
            input={
              Object {
                "name": "confirmPassword",
                "onBlur": [Function],
                "onChange": [Function],
                "onDragStart": [Function],
                "onDrop": [Function],
                "onFocus": [Function],
                "value": "",
              }
            }
            label="ConfirmPassword"
            meta={
              Object {
                "active": false,
                "asyncValidating": false,
                "autofilled": false,
                "dirty": false,
                "dispatch": [Function],
                "error": "Required",
                "form": "contact",
                "initial": undefined,
                "invalid": true,
                "pristine": true,
                "submitFailed": false,
                "submitting": false,
                "touched": false,
                "valid": false,
                "visited": false,
                "warning": undefined,
              }
            }
            type="password"
          >
            <div>
              <label
                className="control-label"
              >
                ConfirmPassword
              </label>
              <div>
                <input
                  className="form-control"
                  name="confirmPassword"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onDragStart={[Function]}
                  onDrop={[Function]}
                  onFocus={[Function]}
                  placeholder="ConfirmPassword"
                  type="password"
                  value=""
                />
              </div>
            </div>
          </renderField>
        </ConnectedField>
      </Connect(ConnectedField)>
    </Field>
  </div>
  <div
    className="form-group"
  >
    <button
      className="btn singup-button"
      type="submit"
    >
      Submit
    </button>
       
    <a
      href="/sign_in"
    >
      Already Have an account
    </a>
  </div>
</form>
`;
